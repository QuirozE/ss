#+title: GPU accelerated discrete optimization in Julia

* Todos
** Optimization problems
*** PROJ Supply Chain [1/2]
**** DONE Write somo intro to Supply Chains
CLOSED: [2021-08-25 Wed 20:21]
**** TODO Learn Linear Programming [1/3]
+ [X] Read book
+ [ ] Recreate ~JUMP~ examples
+ [ ] Try to adapt PSO

*** PROJ PSO [0/2]
**** TODO Write PSO notes [/]
+ [ ] Read Yang's chapter on the subject
**** TODO Sequential implementation [1/2]
+ [X] Create toy implementation
+ [ ] Make notes
** Parallel computing
*** PROJ Parallel Theory [1/2]
**** DONE Pancake's paper
CLOSED: [2022-02-13 Sun 22:07] SCHEDULED: <2022-02-14 Mon 08:00>
**** TODO Pacheco [3/5]
SCHEDULED: <2022-02-13 Sun 14:00>
:LOGBOOK:
CLOCK: [2022-02-13 Sun 22:06]
CLOCK: [2022-02-13 Sun 21:15]--[2022-02-13 Sun 21:46] =>  0:31
CLOCK: [2022-02-13 Sun 20:44]--[2022-02-13 Sun 21:10] =>  0:26
CLOCK: [2022-02-13 Sun 20:12]--[2022-02-13 Sun 20:38] =>  0:26
CLOCK: [2022-02-13 Sun 19:32]--[2022-02-13 Sun 19:58] =>  0:26
CLOCK: [2022-02-13 Sun 15:47]--[2022-02-13 Sun 16:12] =>  0:25
CLOCK: [2022-02-13 Sun 15:16]--[2022-02-13 Sun 15:41] =>  0:25
CLOCK: [2022-02-13 Sun 14:19]--[2022-02-13 Sun 14:45] =>  0:26
CLOCK: [2022-02-13 Sun 13:49]--[2022-02-13 Sun 14:14] =>  0:25
:END:
+ [X] Chapter 2
+ [X] Writes an introduction to the different types of parallel computing
+ [X] Write more in depth notes for a MDMI GPUs architecture
+ [ ] Write about techniques for dealing with parallel programs (connects with Pancake's paper)

** Julia
*** PROJ Julia basics [2/2]
**** DONE Julia intro
CLOSED: [2021-07-08 Thu 15:22]
**** DONE Julia type system
CLOSED: [2021-07-08 Thu 15:22]
*** PROJ Sequential optimization [/]
**** TODO Nassar
+ [ ] Recreate [[youtube:https://youtu.be/S5R8zXJOsUQ][her]] optimization tips
**** TODO Bauman
+ [ ] Recreate [[https://juliaacademy.com/p/parallel-computing][Bauman]]'s code for SIMD optimization

** `CUDA C`
*** PROJ CUDA by Example [0/3]
**** TODO Read CUDA by Example [4/6]
+ [X] Read chapter 1 and 2 from *Cuda by example*
+ [X] Setup `SSH` connection and install the tools on the server
+ [X] Read chapter 3 and run *Cuda by Example* basic scripts
+ [X] Read chapter 4
+ [ ] Read chapter 5
+ [ ] Read chapter 6
**** TODO Try CUDA Example [2/5]
1. [X] Recreate vector sum code
2. [X] Recreate julia sets
3. [ ] Recreate shared dot product
4. [ ] Recreate simple ray tracing
5. [ ] Add `Magick` or some image library to do real rendering.
**** TODO CUDA.jl [/]
+ [ ] Review Documentation
** CIMAT
*** DONE Parallel Thinking <2021-07-09 Fri 12:30> [0/0]
CLOSED: [2021-07-18 Sun 21:41]
**** DONE Review ~OpenMP~ example code [2/2]
CLOSED: [2021-07-09 Fri 14:52] SCHEDULED: <2021-07-08 Thu>
:LOGBOOK:
CLOCK: [2021-07-09 Fri 14:45]--[2021-07-09 Fri 14:52] =>  0:07
CLOCK: [2021-07-09 Fri 11:31]--[2021-07-09 Fri 11:57] =>  0:26
CLOCK: [2021-07-09 Fri 01:39]--[2021-07-09 Fri 02:05] =>  0:26
CLOCK: [2021-07-09 Fri 01:09]--[2021-07-09 Fri 01:34] =>  0:25
:END:
+ [X] Read Code
+ [X] Recreate Code in ~C++~
**** DONE Review ~MPI~ example code [2/2]
CLOSED: [2021-07-15 Thu 11:38] SCHEDULED: <2021-07-08 Thu>
:LOGBOOK:
CLOCK: [2021-07-15 Thu 11:35]--[2021-07-15 Thu 11:38] =>  0:03
:END:
+ [X] Read Code
+ [X] Adapt code to my style
